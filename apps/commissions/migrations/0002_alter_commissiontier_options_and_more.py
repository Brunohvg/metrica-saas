# Generated by Django 5.2.5 on 2025-08-25 03:23

import django.core.validators
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('commissions', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='commissiontier',
            options={'ordering': ['rule', 'min_amount'], 'verbose_name': 'Faixa de Comissão', 'verbose_name_plural': 'Faixas de Comissão'},
        ),
        migrations.RemoveField(
            model_name='commissiontier',
            name='limit_value',
        ),
        migrations.RemoveField(
            model_name='commissiontier',
            name='percentage',
        ),
        migrations.AddField(
            model_name='commissionrule',
            name='bonus_amount',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Valor do bônus, que pode ser percentual ou fixo.', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Valor do Bônus'),
        ),
        migrations.AddField(
            model_name='commissionrule',
            name='bonus_type',
            field=models.CharField(blank=True, choices=[('PERCENTAGE', 'Percentual'), ('FIXED', 'Valor Fixo')], help_text='Define se o bônus é percentual ou valor fixo.', max_length=10, null=True, verbose_name='Tipo de Bônus'),
        ),
        migrations.AddField(
            model_name='commissionrule',
            name='flat_percentage',
            field=models.DecimalField(blank=True, decimal_places=2, help_text="Percentual aplicado para regras do tipo 'Valor Fixo'.", max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))], verbose_name='Percentual Fixo (%)'),
        ),
        migrations.AddField(
            model_name='commissiontier',
            name='commission_rate',
            field=models.DecimalField(decimal_places=2, default=1, help_text='A comissão a ser paga nesta faixa.', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Percentual (%)'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='commissiontier',
            name='max_amount',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='O valor máximo de vendas para aplicar este percentual. Deixe em branco para a última faixa.', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Valor Máximo da Faixa'),
        ),
        migrations.AddField(
            model_name='commissiontier',
            name='min_amount',
            field=models.DecimalField(decimal_places=2, default=1, help_text='O valor mínimo de vendas para aplicar este percentual.', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Valor Mínimo da Faixa'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='commissionreport',
            name='period_month',
            field=models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='Mês do Período'),
        ),
        migrations.AlterField(
            model_name='commissionreport',
            name='period_year',
            field=models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(2025), django.core.validators.MaxValueValidator(2100)], verbose_name='Ano do Período'),
        ),
    ]
